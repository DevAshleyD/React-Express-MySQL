{"version":3,"sources":["components/logo.png","components/HeaderNavigation.js","components/Search.js","App.js","Reducers.js","Client.js","Sagas.js","Actions.js","index.js"],"names":["HeaderNavigation","href","alt","src","logo","Component","Search","onChange","e","target","value","props","fetchData","firstName","onClear","searchInput","ReactDOM","findDOMNode","refs","onSubmit","preventDefault","className","inline","this","type","name","ref","id","placeholder","onClick","data","searchData","search","dataField","isKey","length","renderFullForm","renderTitleAndForm","ConnectedSearch","connect","state","dispatch","payload","App","initialState","mainReducer","action","checkStatus","response","status","error","Error","statusText","console","log","parseJSON","json","Client","query","fetch","accept","then","fetchSearchData","watchFetchSearchData","call","put","undefined","result","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.cde570e5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0620483c.png\";","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport logo from './logo.png';\n\nclass HeaderNavigation extends Component {\n  render() {\n    return (\n      <Navbar href=\"/\">\n        <NavbarBrand>\n          <img alt=\"\" src={logo} />\n        </NavbarBrand>\n      </Navbar>\n    );\n  }\n}\n\nexport default HeaderNavigation;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { Container, Row } from 'reactstrap';\n\nclass Search extends Component {\n  onChange = e => {\n    if (e.target.value === '') {\n      this.props.fetchData({ firstName: '*' });\n    } else {\n      this.props.fetchData({ firstName: e.target.value });\n    }\n  };\n\n  onClear = e => {\n    let searchInput = ReactDOM.findDOMNode(this.refs.searchInput);\n    searchInput ? (searchInput.value = '') : '';\n    this.props.fetchData({ firstName: '*' });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n  };\n\n  renderTitleAndForm() {\n    let titleAndForm = (\n      <Container>\n        <Row className=\"show-grid top10\">\n          <h2> Filter Authors Database by First Name</h2>\n        </Row>\n        <Row className=\"show-grid top10\">\n          <Form inline onSubmit={this.onSubmit}>\n            <FormGroup>\n              <Input\n                type=\"search\"\n                name=\"search\"\n                ref=\"searchInput\"\n                id=\"searchInput\"\n                placeholder=\"First Name\"\n                onChange={this.onChange}\n              />\n            </FormGroup>\n            <Button className=\"btn-ll5\" onClick={this.onClear}>\n              Clear\n            </Button>\n          </Form>\n        </Row>\n      </Container>\n    );\n\n    return titleAndForm;\n  }\n\n  renderFullForm() {\n    let fullForm = (\n      <Container>\n        <Row className=\"show-grid top10\">\n          <h2> Filter Authors Database by First Name</h2>\n        </Row>\n        <Row className=\"show-grid top10\">\n          <Form inline onSubmit={this.onSubmit}>\n            <FormGroup>\n              <Input type=\"search\" name=\"search\" id=\"searchInput\" placeholder=\"First Name\" onChange={this.onChange} />\n            </FormGroup>\n            <Button className=\"btn-ll5\" onClick={this.onClear}>\n              Clear\n            </Button>\n          </Form>\n        </Row>\n        <Row className=\"show-grid top10\">\n          <BootstrapTable data={this.props.searchData} search={false}>\n            <TableHeaderColumn dataField=\"first_name\">First Name</TableHeaderColumn>\n            <TableHeaderColumn dataField=\"last_name\" isKey={true}>\n              Last Name\n            </TableHeaderColumn>\n          </BootstrapTable>\n        </Row>\n      </Container>\n    );\n    return fullForm;\n  }\n\n  render() {\n    if (this.props.searchData.length !== 0) {\n      return this.renderFullForm();\n    } else {\n      return this.renderTitleAndForm();\n    }\n  }\n}\n\nfunction mapStatetoProps(state) {\n  return {\n    searchData: state.searchData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: firstName => dispatch({ type: 'FETCH_SEARCH_DATA', payload: firstName })\n  };\n}\n\nconst ConnectedSearch = connect(mapStatetoProps, mapDispatchToProps)(Search);\n\nexport default ConnectedSearch;\n","import React, { Component } from 'react';\nimport { Jumbotron } from 'reactstrap';\nimport HeaderNavigation from './components/HeaderNavigation';\nimport ConnectedSearch from './components/Search';\n\nimport './index.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <HeaderNavigation />\n        </div>\n        <div>\n          <Jumbotron>\n            <ConnectedSearch />\n          </Jumbotron>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import './Actions';\n\nvar initialState = {\n  searchData: []\n};\n\nfunction mainReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'CHANGE_SEARCH_DATA':\n      return {\n        ...state,\n        searchData: action.data\n      };\n    default:\n      return state;\n  }\n}\n\nexport default mainReducer;\n","function search(query) {\n  return fetch(`http://localhost:3001/api/books?firstName=${query}`, {\n    accept: 'application/json'\n  })\n    .then(checkStatus)\n    .then(parseJSON);\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    const error = new Error(`HTTP Error ${response.statusText}`);\n    error.status = response.statusText;\n    error.response = response;\n    console.log(error); // eslint-disable-line no-console\n    throw error;\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nconst Client = { search };\nexport default Client;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport Client from './Client';\nimport * as Actions from './Actions';\n\nfunction* fetchSearchData(action) {\n  const searchData = yield call(Client.search, action.payload.firstName);\n  const result = yield put(Actions.changeSearchData(searchData));\n\n  // if it is from a redux-action, we get an object with error set not a thrown error\n  if (result !== undefined) {\n    const { error } = result;\n    if (error) {\n      throw result;\n    }\n  }\n  return result;\n}\n\nfunction* watchFetchSearchData() {\n  yield takeEvery('FETCH_SEARCH_DATA', fetchSearchData);\n}\nexport default watchFetchSearchData;\n","export function changeSearchData(data) {\n  return {\n    type: 'CHANGE_SEARCH_DATA',\n    data\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport mainReducer from './Reducers';\nimport watchFetchSearchData from './Sagas.js';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\n\n//saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n//redux store with saga middleware\nconst store = createStore(mainReducer, applyMiddleware(sagaMiddleware));\n// activate the saga(s)\nsagaMiddleware.run(watchFetchSearchData);\n\n//fetch initial data\nstore.dispatch({ type: 'FETCH_SEARCH_DATA', payload: { firstName: '*' } });\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}